argo-workflows:
  enabled: true
  controller:
    replicas: 2
    pdb:
      minAvailable: 1
    persistence:
      archive: true
      postgresql:
        host: workflows-postgresql-ha-pgpool  # TODO: Use templated value: {{ .Release.Name }}-postgresql-ha-pgpool
        port: 5432
        database: argo_workflows
        tableName: workflows
        userNameSecret:
          name: postgres-application-passwords
          key: usernames
        passwordSecret:
          name: postgres-application-passwords
          key: passwords
    workflowDefaults:
      spec:
        serviceAccountName: argo-workflow
  server:
    replicas: 3
    authModes: ["sso"]
    sso:
      enabled: true
      issuer: https://authbeta.diamond.ac.uk/cas/oidc
      rbac:
        enabled: true
    extraEnv:
      - name: SSO_DELEGATE_RBAC_TO_NAMESPACE
        value: "true"

postgresql-ha:
  enabled: true
  postgresql:
    existingSecret: postgres-passwords
    initdbScriptsSecret: postgres-initdb-script
    podAntiAffinityPreset: hard
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 2000m
        memory: 2Gi
  pgpool:
    exisitingSecret: pgpool-passwords
    customUsersSecret: postgres-application-passwords
    resources:
      requests:
        cpu: 500m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 512Mi
  persistence:
    storageClass: db-nvme-storage
    size: 50Gi

oauth2-proxy:
  enabled: true
  replicaCount: 3
  ingress:
    enabled: true
    hostname: workflows.diamond.ac.uk
    pathType: Prefix
    hosts:
      - workflows.diamond.ac.uk
    path: /
  config:
    configFile: |-
      email_domains = [
        "*"
      ]
      skip_auth_routes = [
        "GET=^/api"
      ]
  alphaConfig:
    enabled: true
    configFile: |-
      upstreamConfig:
        upstreams:
        - id: argo-workflows-server
          path: /
          uri: http://{{ .Release.Name }}-argo-workflows-server:2746
      injectRequestHeaders:
      - name: Authorization
        values:
        - claim: id_token
          prefix: "Bearer "
      injectResponseHeaders:
      - name: Identity
        values:
        - claim: id_token
      providers:
        - provider: oidc
          scope: "openid profile email fedid"
          clientId: workflows-argo-server
          clientSecretFile: /etc/alpha/client-secret
          id: authn
          oidcConfig:
            issuerURL: https://authn.diamond.ac.uk/realms/master
            insecureAllowUnverifiedEmail: true
            audienceClaims:
            - aud
            emailClaim: email
            userIDClaim: sub
  extraArgs:
  - --cookie-refresh=55s
  redis:
    enabled: true
  sessionStorage:
    type: redis
  extraVolumes:
  - name: client-secret
    secret:
      secretName: argo-server-sso
      items:
      - key: client-secret
        path: client-secret
  extraVolumeMounts:
  - name: client-secret
    mountPath: /etc/alpha
    readOnly: true
